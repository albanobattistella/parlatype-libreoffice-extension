#!/bin/bash

# This script copies all translation files from a Parlatype launchpad download
# to their respective folders in Parlatype.

IMPORT_FILE=launchpad-export.tar.gz
TEMP_DIR=launchpad-temp
SCRIPT=./launchpad-import

echo "Maintenance script to import translations from Launchpad."
echo "Download from https://translations.launchpad.net/parlatype/trunk/+export"
echo "and save as $IMPORT_FILE into this folder."
echo

if [ "$0" != "$SCRIPT" ]
then
	echo "Script must be run from Parlatype root folder – quitting now."
	exit 1
fi

# Test for import file
if [ ! -e "$IMPORT_FILE" ]
then
	echo "$IMPORT_FILE not found – quitting now."
	exit 1
fi

# Don't overwrite old files
mkdir $TEMP_DIR 2>&- || {
	echo "Remove folder $TEMP_DIR first – quitting now."
	exit 1
}

while true
do
	echo -n "Continue? [Y|n] "
	read result
	if [ "$result" == "n" ]
	then
		exit 1
	fi
	if [ "$result" == "Y" ] || [ "$result" == "y" ] || [ "$result" == "" ]
	then
		break
	fi
done

# Extract all po files (ignore pot files)
echo "Extracting files …"
tar -xvzf $IMPORT_FILE -C $TEMP_DIR --wildcards *.po

# Directory structure is
# $TEMP_DIR
#  └── parlatype_lo

# Rename files, remove prepended strings
echo "Renaming files …"
folder=$TEMP_DIR/parlatype_lo
for file in `ls $folder`
do
	mv $folder/$file $folder/${file#parlatype_lo-}
done

# Check translations
echo "Checking translations …"
count=0
for file in `find $TEMP_DIR/ -name *.po`
do
	msgfmt -c $file || let "count += 1"
done
# There is some unwanted output
rm messages.mo

if (( count > 0 ))
then
	echo "Some translations have errors."
	while true
	do
		echo -n "Dou you want to continue anyway? [y|N] "
		read result
		if [ "$result" == "y" ]
		then
			break
		fi
		if [ "$result" == "N" ] || [ "$result" == "n" ] || [ "$result" == "" ]
		then
			exit 1
		fi
	done
fi


compare_files () {
	if [ ! -e "$1" ]
	then
		result="new"
		return
	fi
	if [ `diff -y --suppress-common-lines "$1" "$2" | grep -v ^\"X-Generator | grep -v ^\"X-Launchpad-Export-Date | wc -l` == "0" ]
	then
		result="no-changes"
		return
	fi
	result="some-changes"
}

# Copy files
echo "Copying changed files …"
folder=$TEMP_DIR/parlatype_lo
for file in `ls $folder`
do
	compare_files "po/$file" "$folder/$file"
	if [ "$result" == "no-changes" ]
	then
		continue
	fi
	cp $folder/$file po
	echo po/$file
done

echo "Deleting temporary folder …"
rm -r $TEMP_DIR